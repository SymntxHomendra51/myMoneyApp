{"version":3,"names":["Action"],"sources":["types.ts"],"sourcesContent":["import type { Dispatch, Ref } from 'react';\nimport type { TextInput } from 'react-native';\n\nimport type { OptionsType, OptionType } from '../types';\n\nexport enum Action {\n    Open = 'open',\n    Close = 'close',\n    SelectOption = 'selectOption',\n    SetOptionsData = 'setOptionsData',\n    SetSearchInputRef = 'setSearchInputRef',\n    SetSearchValue = 'setSearchValue',\n    SearchOptions = 'searchOptions',\n    SetPosition = 'setPosition',\n}\n\nexport type ActionType =\n    | {\n          type: Action.Open;\n      }\n    | {\n          type: Action.Close;\n      }\n    | {\n          type: Action.SelectOption;\n          payload: {\n              selectedOption: OptionType | OptionType[] | null;\n              selectedOptionIndex: number | number[];\n          };\n      }\n    | {\n          type: Action.SetOptionsData;\n          payload: OptionsType;\n      }\n    | {\n          type: Action.SetPosition;\n          payload: Position;\n      }\n    | {\n          type: Action.SearchOptions;\n          payload: string;\n          searchPattern: (payload: string) => string;\n      }\n    | {\n          type: Action.SetSearchValue;\n          payload: string;\n      }\n    | {\n          type: Action.SetSearchInputRef;\n          payload: Ref<TextInput>;\n      };\n\nexport type Position = {\n    width: number;\n    top: number;\n    left: number;\n    aboveSelectControl: boolean;\n};\n\nexport type State = {\n    isOpened: boolean;\n    selectedOption: OptionType | null | OptionType[];\n    selectedOptionIndex: number | number[];\n    optionsData: OptionsType;\n    openedPosition: Position;\n    searchValue: string;\n    searchedOptions: OptionType[];\n    searchInputRef: Ref<TextInput> | null;\n};\n\nexport type DispatchType = Dispatch<ActionType>;\n"],"mappings":";;;;;;IAKYA,M;;;WAAAA,M;EAAAA,M;EAAAA,M;EAAAA,M;EAAAA,M;EAAAA,M;EAAAA,M;EAAAA,M;EAAAA,M;GAAAA,M,sBAAAA,M"}