"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reducer = exports.initialData = void 0;

var _types = require("./types");

const initialData = {
  isOpened: false,
  selectedOption: null,
  selectedOptionIndex: -1,
  searchValue: '',
  searchedOptions: [],
  searchInputRef: null,
  openedPosition: {
    width: 0,
    top: 0,
    left: 0,
    aboveSelectControl: false
  },
  optionsData: []
};
exports.initialData = initialData;

const reducer = (state, action) => {
  switch (action.type) {
    case _types.Action.Open:
      return { ...state,
        isOpened: true
      };

    case _types.Action.Close:
      return { ...state,
        isOpened: false
      };

    case _types.Action.SelectOption:
      return { ...state,
        selectedOption: action.payload.selectedOption,
        selectedOptionIndex: action.payload.selectedOptionIndex
      };

    case _types.Action.SetOptionsData:
      return { ...state,
        optionsData: action.payload
      };

    case _types.Action.SetSearchValue:
      return { ...state,
        searchValue: action.payload
      };

    case _types.Action.SearchOptions:
      {
        if (action.payload === '') {
          return { ...state,
            searchedOptions: []
          };
        }

        const regex = new RegExp(action.searchPattern(action.payload.toLowerCase()));
        return { ...state,
          searchedOptions: state.optionsData.filter(option => regex.test(option.label.toLowerCase()))
        };
      }

    case _types.Action.SetSearchInputRef:
      return { ...state,
        searchInputRef: action.payload
      };

    case _types.Action.SetPosition:
      return { ...state,
        openedPosition: { ...state.openedPosition,
          ...action.payload
        }
      };
  }
};

exports.reducer = reducer;
//# sourceMappingURL=reducer.js.map