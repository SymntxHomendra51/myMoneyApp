{"version":3,"names":["SelectInput","disabled","isOpened","searchValue","searchPattern","placeholderText","onPressSelectControl","dispatch","setPosition","multiSelection","selectedOption","placeholderTextColor","selectControlTextStyle","searchInputRef","useRef","useEffect","showSubscription","Keyboard","addListener","hideSubscription","type","Action","SetSearchInputRef","payload","remove","onChangeText","Open","SetSearchValue","SearchOptions","resolvePlaceholder","Array","isArray","length","styles","text","marginRight","I18nManager","isRTL","StyleSheet","create","fontSize","FONT_SIZE","backgroundColor","COLORS","DISABLED"],"sources":["index.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport {\n    I18nManager,\n    Keyboard,\n    StyleSheet,\n    TextInput,\n    TextStyle,\n} from 'react-native';\n\nimport { COLORS, FONT_SIZE } from '../../constants/styles';\nimport type { OptionalToRequired } from '../../helpers/types/OptionalToRequired';\nimport { Action, DispatchType, State } from '../../state/types';\nimport type {\n    OnPressSelectControlType,\n    OnSetPosition,\n    SelectProps,\n} from '../../types';\n\ntype SelectInputProps = OptionalToRequired<\n    Pick<State, 'isOpened' | 'searchValue' | 'selectedOption'> & {\n        dispatch: DispatchType;\n    } & Pick<\n            SelectProps,\n            | 'placeholderText'\n            | 'searchPattern'\n            | 'disabled'\n            | 'multiSelection'\n            | 'selectControlTextStyle'\n            | 'placeholderTextColor'\n        > & { onPressSelectControl: OnPressSelectControlType } & {\n            setPosition: OnSetPosition;\n        }\n>;\n\nexport const SelectInput = ({\n    disabled,\n    isOpened,\n    searchValue,\n    searchPattern,\n    placeholderText,\n    onPressSelectControl,\n    dispatch,\n    setPosition,\n    multiSelection,\n    selectedOption,\n    placeholderTextColor,\n    selectControlTextStyle,\n}: SelectInputProps) => {\n    const searchInputRef = useRef<TextInput>(null);\n\n    useEffect(() => {\n        const showSubscription = Keyboard.addListener('keyboardDidShow', () => {\n            setPosition();\n        });\n        const hideSubscription = Keyboard.addListener('keyboardDidHide', () => {\n            setPosition();\n        });\n        dispatch({\n            type: Action.SetSearchInputRef,\n            payload: searchInputRef,\n        });\n        return () => {\n            showSubscription.remove();\n            hideSubscription.remove();\n            dispatch({\n                type: Action.SetSearchInputRef,\n                payload: null,\n            });\n        };\n    }, []);\n\n    const onChangeText = (payload: string) => {\n        if (!disabled) {\n            if (!isOpened) {\n                dispatch({ type: Action.Open });\n            }\n            dispatch({\n                type: Action.SetSearchValue,\n                payload,\n            });\n            if (searchPattern) {\n                dispatch({\n                    type: Action.SearchOptions,\n                    searchPattern,\n                    payload,\n                });\n            }\n        }\n    };\n\n    const resolvePlaceholder = () => {\n        if (\n            multiSelection &&\n            Array.isArray(selectedOption) &&\n            selectedOption.length > 0\n        ) {\n            return '  ';\n        }\n        return placeholderText;\n    };\n\n    return (\n        <TextInput\n            ref={searchInputRef}\n            accessibilityLabel=\"Place text\"\n            editable={!disabled}\n            placeholder={resolvePlaceholder()}\n            placeholderTextColor={placeholderTextColor}\n            style={\n                disabled\n                    ? [\n                          styles.disabled,\n                          styles.text,\n                          multiSelection && { marginRight: 5 },\n                      ]\n                    : [styles.text, selectControlTextStyle]\n            }\n            textAlign={I18nManager.isRTL ? 'right' : 'left'}\n            value={searchValue}\n            onChangeText={onChangeText}\n            onPressIn={disabled ? () => null : onPressSelectControl}\n        />\n    );\n};\n\ntype Styles = {\n    text: TextStyle;\n    disabled: TextStyle;\n};\n\nconst styles = StyleSheet.create<Styles>({\n    text: {\n        fontSize: FONT_SIZE,\n    },\n    disabled: {\n        backgroundColor: COLORS.DISABLED,\n    },\n});\n"],"mappings":";;;;;;;AAAA;;AACA;;AAQA;;AAEA;;;;;;AAuBO,MAAMA,WAAW,GAAG,QAaH;EAAA,IAbI;IACxBC,QADwB;IAExBC,QAFwB;IAGxBC,WAHwB;IAIxBC,aAJwB;IAKxBC,eALwB;IAMxBC,oBANwB;IAOxBC,QAPwB;IAQxBC,WARwB;IASxBC,cATwB;IAUxBC,cAVwB;IAWxBC,oBAXwB;IAYxBC;EAZwB,CAaJ;EACpB,MAAMC,cAAc,GAAG,IAAAC,aAAA,EAAkB,IAAlB,CAAvB;EAEA,IAAAC,gBAAA,EAAU,MAAM;IACZ,MAAMC,gBAAgB,GAAGC,qBAAA,CAASC,WAAT,CAAqB,iBAArB,EAAwC,MAAM;MACnEV,WAAW;IACd,CAFwB,CAAzB;;IAGA,MAAMW,gBAAgB,GAAGF,qBAAA,CAASC,WAAT,CAAqB,iBAArB,EAAwC,MAAM;MACnEV,WAAW;IACd,CAFwB,CAAzB;;IAGAD,QAAQ,CAAC;MACLa,IAAI,EAAEC,aAAA,CAAOC,iBADR;MAELC,OAAO,EAAEV;IAFJ,CAAD,CAAR;IAIA,OAAO,MAAM;MACTG,gBAAgB,CAACQ,MAAjB;MACAL,gBAAgB,CAACK,MAAjB;MACAjB,QAAQ,CAAC;QACLa,IAAI,EAAEC,aAAA,CAAOC,iBADR;QAELC,OAAO,EAAE;MAFJ,CAAD,CAAR;IAIH,CAPD;EAQH,CAnBD,EAmBG,EAnBH;;EAqBA,MAAME,YAAY,GAAIF,OAAD,IAAqB;IACtC,IAAI,CAACtB,QAAL,EAAe;MACX,IAAI,CAACC,QAAL,EAAe;QACXK,QAAQ,CAAC;UAAEa,IAAI,EAAEC,aAAA,CAAOK;QAAf,CAAD,CAAR;MACH;;MACDnB,QAAQ,CAAC;QACLa,IAAI,EAAEC,aAAA,CAAOM,cADR;QAELJ;MAFK,CAAD,CAAR;;MAIA,IAAInB,aAAJ,EAAmB;QACfG,QAAQ,CAAC;UACLa,IAAI,EAAEC,aAAA,CAAOO,aADR;UAELxB,aAFK;UAGLmB;QAHK,CAAD,CAAR;MAKH;IACJ;EACJ,CAjBD;;EAmBA,MAAMM,kBAAkB,GAAG,MAAM;IAC7B,IACIpB,cAAc,IACdqB,KAAK,CAACC,OAAN,CAAcrB,cAAd,CADA,IAEAA,cAAc,CAACsB,MAAf,GAAwB,CAH5B,EAIE;MACE,OAAO,IAAP;IACH;;IACD,OAAO3B,eAAP;EACH,CATD;;EAWA,oBACI,6BAAC,sBAAD;IACI,GAAG,EAAEQ,cADT;IAEI,kBAAkB,EAAC,YAFvB;IAGI,QAAQ,EAAE,CAACZ,QAHf;IAII,WAAW,EAAE4B,kBAAkB,EAJnC;IAKI,oBAAoB,EAAElB,oBAL1B;IAMI,KAAK,EACDV,QAAQ,GACF,CACIgC,MAAM,CAAChC,QADX,EAEIgC,MAAM,CAACC,IAFX,EAGIzB,cAAc,IAAI;MAAE0B,WAAW,EAAE;IAAf,CAHtB,CADE,GAMF,CAACF,MAAM,CAACC,IAAR,EAActB,sBAAd,CAbd;IAeI,SAAS,EAAEwB,wBAAA,CAAYC,KAAZ,GAAoB,OAApB,GAA8B,MAf7C;IAgBI,KAAK,EAAElC,WAhBX;IAiBI,YAAY,EAAEsB,YAjBlB;IAkBI,SAAS,EAAExB,QAAQ,GAAG,MAAM,IAAT,GAAgBK;EAlBvC,EADJ;AAsBH,CAzFM;;;;AAgGP,MAAM2B,MAAM,GAAGK,uBAAA,CAAWC,MAAX,CAA0B;EACrCL,IAAI,EAAE;IACFM,QAAQ,EAAEC;EADR,CAD+B;EAIrCxC,QAAQ,EAAE;IACNyC,eAAe,EAAEC,cAAA,CAAOC;EADlB;AAJ2B,CAA1B,CAAf"}