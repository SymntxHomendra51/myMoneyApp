import { ComponentProps } from 'react';
import type { OptionalToRequired } from '../../helpers/types/OptionalToRequired';
import type { Position, State } from '../../state/types';
import type { OnOutsidePress, OnPressOptionType } from '../../types';
import type { Select } from '../select';
declare type FromSelectComponentProps = Pick<ComponentProps<typeof Select>, 'flatListProps' | 'optionSelectedStyle' | 'optionStyle' | 'optionTextStyle' | 'scrollToSelectedOption' | 'noOptionsText' | 'onSelect' | 'animated' | 'animationDuration' | 'optionsListStyle' | 'NoOptionsComponent' | 'OptionComponent' | 'searchable' | 'multiSelection'>;
declare type OptionsListProps = OptionalToRequired<FromSelectComponentProps & Pick<State, 'isOpened' | 'openedPosition' | 'optionsData' | 'selectedOption' | 'searchedOptions' | 'searchValue' | 'selectedOptionIndex'> & {
    onOutsidePress: OnOutsidePress;
    onPressOption: OnPressOptionType;
} & Pick<Position, 'aboveSelectControl'>>;
export declare const OptionsList: ({ aboveSelectControl, flatListProps, onPressOption, selectedOption, animated, animationDuration, searchedOptions, searchValue, searchable, isOpened, onOutsidePress, multiSelection, openedPosition: { width, top, left }, optionsData, optionSelectedStyle, optionStyle, optionTextStyle, noOptionsText, scrollToSelectedOption, onSelect, optionsListStyle, NoOptionsComponent, OptionComponent, selectedOptionIndex, }: OptionsListProps) => JSX.Element;
export {};
