import { ComponentPropsWithRef } from 'react';
import type { OptionalToRequired } from '../../helpers/types/OptionalToRequired';
import type { OnPressSelectControlType, OnSetPosition, OptionType, Select } from '../../index';
import type { DispatchType, State } from '../../state/types';
declare type FromSelectComponentProps = Pick<ComponentPropsWithRef<typeof Select>, 'selectControlTextStyle' | 'placeholderText' | 'selectControlStyle' | 'disabled' | 'searchPattern' | 'searchable' | 'multiSelection' | 'multiSelectionOptionStyle' | 'placeholderTextColor'>;
declare type SelectControlProps = OptionalToRequired<FromSelectComponentProps & Pick<State, 'selectedOption'>>;
declare type Props = {
    onPressRemove: (option: OptionType | null) => void;
    onPressSelectControl: OnPressSelectControlType;
} & SelectControlProps & Pick<State, 'isOpened' | 'selectedOption' | 'searchValue'> & {
    dispatch: DispatchType;
} & {
    setPosition: OnSetPosition;
};
export declare const MultiSelect: ({ searchable, selectControlTextStyle, selectControlStyle, selectedOption, placeholderText, placeholderTextColor, onPressRemove, disabled, dispatch, isOpened, onPressSelectControl, searchPattern, searchValue, setPosition, multiSelection, multiSelectionOptionStyle, }: Props) => JSX.Element;
export {};
