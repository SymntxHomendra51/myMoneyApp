import React, { useEffect, useRef } from 'react';
import { Animated, View } from 'react-native';
export const OptionsListWrapper = _ref => {
  let {
    children,
    animated,
    animationDuration,
    isOpened,
    wrapperStyles
  } = _ref;
  const fadeAnimation = useRef(new Animated.Value(0)).current;
  useEffect(() => {
    if (animated) {
      Animated.timing(fadeAnimation, {
        toValue: isOpened ? 1 : 0,
        duration: animationDuration,
        useNativeDriver: true
      }).start();
    }
  }, [fadeAnimation, isOpened]);
  return animated ? /*#__PURE__*/React.createElement(Animated.View, {
    pointerEvents: isOpened ? 'auto' : 'none',
    style: [wrapperStyles, {
      opacity: fadeAnimation
    }]
  }, children) : isOpened ? /*#__PURE__*/React.createElement(View, {
    style: wrapperStyles
  }, children) : null;
};
//# sourceMappingURL=index.js.map