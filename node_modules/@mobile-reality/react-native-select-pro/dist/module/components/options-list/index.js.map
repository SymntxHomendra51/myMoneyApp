{"version":3,"names":["React","useCallback","AccessibilityInfo","findNodeHandle","FlatList","StyleSheet","TouchableWithoutFeedback","View","Portal","Portals","BORDER_WIDTH","COLORS","ITEM_HEIGHT","MAX_HEIGHT_LIST","SHAPE","NoOptions","Option","OptionsListWrapper","OptionsList","aboveSelectControl","flatListProps","onPressOption","selectedOption","animated","animationDuration","searchedOptions","searchValue","searchable","isOpened","onOutsidePress","multiSelection","openedPosition","width","top","left","optionsData","optionSelectedStyle","optionStyle","optionTextStyle","noOptionsText","scrollToSelectedOption","onSelect","optionsListStyle","NoOptionsComponent","OptionComponent","selectedOptionIndex","selectedOptionTyped","flatList","node","isScrollToSelectedOption","scrollToIndex","index","measuredRef","reactTag","setAccessibilityFocus","resolveData","length","label","resolveIsSelected","item","value","find","option","SelectOutsideWrapper","styles","modalOverlay","Select","options","overflown","notOverflown","expanded","_data","height","flatten","isNumber","offset","isSelected","undefined","create","absoluteFillObject","zIndex","flex","position","backgroundColor","WHITE","borderWidth","maxHeight","elevation","borderTopWidth","borderBottomRightRadius","borderBottomLeftRadius","borderBottomWidth","borderTopRightRadius","borderTopLeftRadius"],"sources":["index.tsx"],"sourcesContent":["import React, { ComponentProps, useCallback } from 'react';\nimport {\n    AccessibilityInfo,\n    findNodeHandle,\n    FlatList,\n    StyleSheet,\n    TouchableOpacity,\n    TouchableWithoutFeedback,\n    View,\n    ViewStyle,\n} from 'react-native';\nimport { Portal } from '@gorhom/portal';\n\nimport { Portals } from '../../constants/portals';\nimport {\n    BORDER_WIDTH,\n    COLORS,\n    ITEM_HEIGHT,\n    MAX_HEIGHT_LIST,\n    SHAPE,\n} from '../../constants/styles';\nimport type { OptionalToRequired } from '../../helpers/types/OptionalToRequired';\nimport type { Position, State } from '../../state/types';\nimport type {\n    OnOutsidePress,\n    OnPressOptionType,\n    OptionType,\n} from '../../types';\nimport { NoOptions } from '../no-options';\nimport { Option } from '../option';\nimport { OptionsListWrapper } from '../options-list-wrapper';\nimport type { Select } from '../select';\n\ntype FromSelectComponentProps = Pick<\n    ComponentProps<typeof Select>,\n    | 'flatListProps'\n    | 'optionSelectedStyle'\n    | 'optionStyle'\n    | 'optionTextStyle'\n    | 'scrollToSelectedOption'\n    | 'noOptionsText'\n    | 'onSelect'\n    | 'animated'\n    | 'animationDuration'\n    | 'optionsListStyle'\n    | 'NoOptionsComponent'\n    | 'OptionComponent'\n    | 'searchable'\n    | 'multiSelection'\n>;\n\ntype OptionsListProps = OptionalToRequired<\n    FromSelectComponentProps &\n        Pick<\n            State,\n            | 'isOpened'\n            | 'openedPosition'\n            | 'optionsData'\n            | 'selectedOption'\n            | 'searchedOptions'\n            | 'searchValue'\n            | 'selectedOptionIndex'\n        > & {\n            onOutsidePress: OnOutsidePress;\n            onPressOption: OnPressOptionType;\n        } & Pick<Position, 'aboveSelectControl'>\n>;\n\nexport const OptionsList = ({\n    aboveSelectControl,\n    flatListProps,\n    onPressOption,\n    selectedOption,\n    animated,\n    animationDuration,\n    searchedOptions,\n    searchValue,\n    searchable,\n    isOpened,\n    onOutsidePress,\n    multiSelection,\n    openedPosition: { width, top, left },\n    optionsData,\n    optionSelectedStyle,\n    optionStyle,\n    optionTextStyle,\n    noOptionsText,\n    scrollToSelectedOption,\n    onSelect,\n    optionsListStyle,\n    NoOptionsComponent,\n    OptionComponent,\n    selectedOptionIndex,\n}: OptionsListProps) => {\n    const selectedOptionTyped = selectedOption as OptionType;\n\n    const flatList = useCallback(\n        (node: FlatList | null) => {\n            if (node !== null) {\n                const isScrollToSelectedOption =\n                    scrollToSelectedOption &&\n                    selectedOptionIndex >= 0 &&\n                    typeof selectedOptionIndex === 'number';\n\n                if (isScrollToSelectedOption) {\n                    try {\n                        node.scrollToIndex({\n                            index: selectedOptionIndex,\n                            animated: false,\n                        });\n                        // eslint-disable-next-line no-empty\n                    } catch {}\n                }\n            }\n        },\n        [scrollToSelectedOption, selectedOptionIndex, onPressOption],\n    );\n\n    const measuredRef = useCallback(\n        (node: TouchableOpacity | null) => {\n            if (node !== null) {\n                const reactTag = findNodeHandle(node);\n                if (reactTag) {\n                    AccessibilityInfo.setAccessibilityFocus(reactTag);\n                }\n            }\n        },\n        [isOpened],\n    );\n\n    const resolveData = () => {\n        if (!searchable) {\n            return optionsData;\n        }\n        if (searchable && searchValue.length === 0) {\n            return optionsData;\n        }\n        if (\n            selectedOptionTyped &&\n            searchValue?.length > 0 &&\n            searchValue === selectedOptionTyped.label\n        ) {\n            return optionsData;\n        }\n        return searchedOptions;\n    };\n\n    const resolveIsSelected = (item: OptionType) => {\n        if (!multiSelection) {\n            return item.value === selectedOptionTyped?.value;\n        }\n        return (\n            selectedOption &&\n            (selectedOption as OptionType[]).find(\n                (option) => item.value === option.value,\n            )\n        );\n    };\n\n    return (\n        <>\n            {isOpened && (\n                <Portal hostName={Portals.SelectOutsideWrapper}>\n                    <TouchableWithoutFeedback\n                        accessibilityLabel=\"Close a dropdown from outside\"\n                        accessibilityRole=\"button\"\n                        onPress={onOutsidePress}\n                    >\n                        <View style={styles.modalOverlay} />\n                    </TouchableWithoutFeedback>\n                </Portal>\n            )}\n            <Portal hostName={Portals.Select}>\n                <OptionsListWrapper\n                    animated={animated}\n                    animationDuration={animationDuration}\n                    isOpened={isOpened}\n                    wrapperStyles={[\n                        styles.options,\n                        optionsListStyle,\n                        { top, left, width },\n                        aboveSelectControl\n                            ? styles.overflown\n                            : styles.notOverflown,\n                    ]}\n                >\n                    <FlatList\n                        ref={flatList}\n                        accessibilityLabel=\"Options list\"\n                        accessibilityState={{\n                            expanded: isOpened,\n                        }}\n                        bounces={false}\n                        data={resolveData()}\n                        getItemLayout={(_data, index) => {\n                            const height =\n                                StyleSheet.flatten(optionStyle)?.height;\n                            const isNumber = typeof height === 'number';\n                            return {\n                                length: isNumber ? height : ITEM_HEIGHT,\n                                offset: isNumber\n                                    ? height * index\n                                    : ITEM_HEIGHT * index,\n                                index,\n                            };\n                        }}\n                        keyExtractor={({ value }) => value}\n                        keyboardShouldPersistTaps=\"handled\"\n                        persistentScrollbar={true}\n                        renderItem={({ item, index }) => {\n                            const { value } = item;\n                            const isSelected = !!resolveIsSelected(item);\n\n                            return (\n                                <Option\n                                    key={value}\n                                    ref={index === 0 ? measuredRef : undefined}\n                                    OptionComponent={OptionComponent}\n                                    isSelected={isSelected}\n                                    option={item}\n                                    optionSelectedStyle={optionSelectedStyle}\n                                    optionStyle={optionStyle}\n                                    optionTextStyle={optionTextStyle}\n                                    optionIndex={index}\n                                    onPressOption={onPressOption}\n                                    onSelect={onSelect}\n                                />\n                            );\n                        }}\n                        {...flatListProps}\n                        ListEmptyComponent={\n                            NoOptionsComponent || (\n                                <NoOptions noOptionsText={noOptionsText} />\n                            )\n                        }\n                    />\n                </OptionsListWrapper>\n            </Portal>\n        </>\n    );\n};\n\ntype Styles = {\n    modalOverlay: ViewStyle;\n    options: ViewStyle;\n    notOverflown: ViewStyle;\n    overflown: ViewStyle;\n};\n\nconst styles = StyleSheet.create<Styles>({\n    modalOverlay: {\n        ...StyleSheet.absoluteFillObject,\n        zIndex: 1,\n    },\n    options: {\n        flex: 1,\n        position: 'absolute',\n        zIndex: 1,\n        backgroundColor: COLORS.WHITE,\n        borderWidth: BORDER_WIDTH,\n        maxHeight: MAX_HEIGHT_LIST,\n        elevation: 5,\n    },\n    notOverflown: {\n        borderTopWidth: 0,\n        borderBottomRightRadius: SHAPE,\n        borderBottomLeftRadius: SHAPE,\n    },\n    overflown: {\n        borderBottomWidth: 0,\n        borderTopRightRadius: SHAPE,\n        borderTopLeftRadius: SHAPE,\n    },\n});\n"],"mappings":"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"}