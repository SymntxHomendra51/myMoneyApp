import React from 'react';
import { Pressable, StyleSheet, Text } from 'react-native';
import { COLORS, FONT_SIZE } from '../../../../constants/styles';
export const MultiSelectedOption = _ref => {
  var _StyleSheet$flatten;

  let {
    isPlaceholder = false,
    option,
    selectControlTextStyle,
    multiSelectionOptionStyle,
    placeholderText,
    placeholderTextColor,
    optionWidth,
    onPressRemove
  } = _ref;
  return /*#__PURE__*/React.createElement(Pressable, {
    accessibilityLabel: option ? `${option.label} selected` : 'Placeholder in multi-select',
    style: [isPlaceholder ? styles.placeholderText : styles.multiSelectionOption, multiSelectionOptionStyle, {
      width: optionWidth
    }],
    onPress: () => onPressRemove ? onPressRemove(option) : undefined
  }, /*#__PURE__*/React.createElement(Text, {
    numberOfLines: 1,
    style: [styles.text, selectControlTextStyle, {
      color: option !== null && option !== void 0 && option.label ? ((_StyleSheet$flatten = StyleSheet.flatten(selectControlTextStyle)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.color) || COLORS.BLACK : placeholderTextColor
    }]
  }, (option === null || option === void 0 ? void 0 : option.label) || placeholderText));
};
const styles = StyleSheet.create({
  text: {
    fontSize: FONT_SIZE,
    textAlign: 'left'
  },
  placeholderText: {
    alignItems: 'flex-start',
    justifyContent: 'center',
    display: 'flex'
  },
  multiSelectionOption: {
    alignItems: 'flex-start',
    justifyContent: 'center',
    display: 'flex',
    borderRadius: 4,
    backgroundColor: COLORS.DISABLED,
    borderWidth: 1,
    borderColor: COLORS.BLACK,
    margin: 2,
    paddingLeft: 5
  }
});
//# sourceMappingURL=index.js.map